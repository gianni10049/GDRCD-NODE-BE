type Query {


	# General call
	routeControl(
		token: String!
		character_needed: Boolean
		account_needed: Boolean
	): genericResponse
	permissionControl(token: String!, permission: String!): genericResponse
	isMineCharacter(token:String!, characterId:ID!): genericResponse

	# Homepage
	login(username: String!, password: String!): loginResponse
	recPass(email: String!): toastResponse

	# CharSelect
	charactersList(token: String!): [characterData]
	setCharacter(token: String!, characterId: ID!): loginResponse
	getCharacter(token: String!, characterId: ID): characterData

	# Ability
	getAbility(token:String!, abilityId: ID!, characterId: ID): abilityData
	updateAbility(token:String!,abilityId: ID!, characterId: ID): genericResponse

	# Stats
	listStats(token:String!): [statData]

	#Character
	getCharacterStats(token: String!, characterId: ID!): getCharacterStatsResponse
	getCharacterAbility(token: String!, characterId: ID!): getCharacterAbilityResponse
	getCharacterActionPercentages(token: String!, characterId: ID!, action: String): getCharacterActionPercentagesResponse

	#Character Points
	getCharacterPoints(token: String!, characterId: ID!): getCharacterPointsResponse
}
